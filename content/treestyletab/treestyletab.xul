<?xml version="1.0"?>
<?xml-stylesheet href="treestyletab.css" type="text/css"?>
<?xml-stylesheet href="chrome://treestyletab/skin/treestyletab.css" type="text/css"?>
<?xml-stylesheet href="chrome://treestyletab-platform/skin/treestyletab.css" type="text/css"?>
<?xul-overlay href="res/tabFx2Compatible.xul"?>
<?xul-overlay href="res/fullScreenCanvas.xul"?>
<!DOCTYPE overlay SYSTEM "chrome://treestyletab/locale/treestyletab.dtd">
<overlay id="treestyletab-overlay"
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

<script src="res/prefs.js" type="application/x-javascript; version=1.7"/>
<script src="res/boxObject.js" type="application/x-javascript; version=1.7"/>
<script src="res/stringBundle.js" type="application/x-javascript; version=1.7"/>
<script src="res/autoScroll.js" type="application/x-javascript; version=1.7"/>
<script src="res/animationManager.js" type="application/x-javascript; version=1.7"/>
<script src="res/extensions.js" type="application/x-javascript; version=1.7"/>
<script src="treestyletab.js" type="application/x-javascript; version=1.7"/>
<script src="treestyletabbrowser.js" type="application/x-javascript; version=1.7"/>
<script src="preloadImages.js" type="application/x-javascript; version=1.7"/>
<script src="bookmarksOverlay.js" type="application/x-javascript; version=1.7"/>
<script src="editBookmarkOverlay.js" type="application/x-javascript; version=1.7"/>
<script src="hacks.js" type="application/x-javascript; version=1.7"/>
<script type="application/x-javascript; version=1.7"><![CDATA[
	// preload images
	TreeStyleTabService.observe(
		null,
		'nsPref:changed',
		'extensions.treestyletab.tabbar.style'
	);
]]></script>


<popup id="contentAreaContextMenu">
	<menuseparator id="context-treestyletab-openSelectionLinks-separator"
		insertafter="context-sep-open"/>
	<menuitem id="context-treestyletab-openSelectionLinks"
		insertafter="context-sep-open"
		label="&context.openSelectionLinks.label;"
		accesskey="&context.openSelectionLinks.accesskey;"
		oncommand="TreeStyleTabService.openSelectionLinks();"/>
</popup>

<menupopup id="multipletab-selection-menu">
	<menuitem id="multipletab-selection-item-removeTabSubTree"
		insertafter="multipletab-selection-removeTabs"
		label="&selection.removeTabSubTree.label;"
		accesskey="&selection.removeTabSubTree.accesskey;"
		oncommand="TreeStyleTabService.removeTabSubTree(MultipleTabService.getSelectedTabs());"/>
	<menuitem id="multipletab-selection-item-createSubTree"
		insertafter="multipletab-selection-splitWindow"
		label="&selection.createSubTree.label;"
		accesskey="&selection.createSubTree.accesskey;"
		oncommand="TreeStyleTabService.createSubTree(MultipleTabService.getSelectedTabs());"
		multipletab-enabled="TreeStyleTabService.canCreateSubTree(MultipleTabService.getSelectedTabs())"/>
</menupopup>

<popupset id="mainPopupSet">
	<menupopup id="multipletab-tabcontext-menu-template">

		<menuitem id="context-item-reloadTabSubTree"
			label="&context.reloadTabSubTree.label;"
			accesskey="&context.reloadTabSubTree.accesskey;"
			oncommand="TreeStyleTabService.reloadTabSubTree(TreeStyleTabService.getTabBrowserFromChild(this).mContextTab);"
			onclick="if (event.button == 1 || (event.button == 0 &amp;&amp; TreeStyleTabService.isAccelKeyPressed(event))) {
				TreeStyleTabService.reloadTabSubTree(TreeStyleTabService.getTabBrowserFromChild(this).mContextTab, true);
				event.stopPropagation();
				this.parentNode.hidePopup();
			}"
			multipletab-insertafter="TreeStyleTabService.evaluateXPath(
				&quot;descendant::*[starts-with(@id, 'context_reloadTab')][1]&quot;
			, tabContextMenu, XPathResult.FIRST_ORDERED_NODE_TYPE).singleNodeValue"/>
		<menuitem id="context-item-reloadDescendantTabs"
			label="&context.reloadDescendantTabs.label;"
			accesskey="&context.reloadDescendantTabs.accesskey;"
			oncommand="TreeStyleTabService.reloadTabSubTree(TreeStyleTabService.getTabBrowserFromChild(this).mContextTab, true);"
			onclick="if (event.button == 1 || (event.button == 0 &amp;&amp; TreeStyleTabService.isAccelKeyPressed(event))) {
				TreeStyleTabService.reloadTabSubTree(TreeStyleTabService.getTabBrowserFromChild(this).mContextTab);
				event.stopPropagation();
				this.parentNode.hidePopup();
			}"
			multipletab-insertafter="TreeStyleTabService.evaluateXPath(
				&quot;descendant::*[starts-with(@id, 'context-item-reloadTabSubTree')][1]&quot;
			, tabContextMenu, XPathResult.FIRST_ORDERED_NODE_TYPE).singleNodeValue"/>

		<menuitem id="context-item-removeTabSubTree"
			label="&context.removeTabSubTree.label;"
			accesskey="&context.removeTabSubTree.accesskey;"
			oncommand="TreeStyleTabService.removeTabSubTree(TreeStyleTabService.getTabBrowserFromChild(this).mContextTab);"
			onclick="if (event.button == 1 || (event.button == 0 &amp;&amp; TreeStyleTabService.isAccelKeyPressed(event))) {
				TreeStyleTabService.removeTabSubTree(TreeStyleTabService.getTabBrowserFromChild(this).mContextTab, true);
				event.stopPropagation();
				this.parentNode.hidePopup();
			}"
			multipletab-insertbefore="TreeStyleTabService.evaluateXPath(
				&quot;(descendant::*[starts-with(@id, 'multipletab-context-removeAll') | starts-with(@id, 'context_closeTab')][1] | child::xul:menuitem[last()])/preceding-sibling::xul:menuseparator[1]&quot;
			, tabContextMenu, XPathResult.FIRST_ORDERED_NODE_TYPE).singleNodeValue"/>
		<menuitem id="context-item-removeDescendantTabs"
			label="&context.removeDescendantTabs.label;"
			accesskey="&context.removeDescendantTabs.accesskey;"
			oncommand="TreeStyleTabService.removeTabSubTree(TreeStyleTabService.getTabBrowserFromChild(this).mContextTab, true);"
			onclick="if (event.button == 1 || (event.button == 0 &amp;&amp; TreeStyleTabService.isAccelKeyPressed(event))) {
				TreeStyleTabService.removeTabSubTree(TreeStyleTabService.getTabBrowserFromChild(this).mContextTab);
				event.stopPropagation();
				this.parentNode.hidePopup();
			}"
			multipletab-insertafter="TreeStyleTabService.evaluateXPath(
				&quot;descendant::*[starts-with(@id, 'context-item-removeTabSubTree')][1]&quot;
			, tabContextMenu, XPathResult.FIRST_ORDERED_NODE_TYPE).singleNodeValue"/>

		<menuitem id="context-item-bookmarkTabSubTree"
			label="&context.bookmarkTabSubTree.label;"
			accesskey="&context.bookmarkTabSubTree.accesskey;"
			oncommand="TreeStyleTabBookmarksService.bookmarkTabSubTree(TreeStyleTabService.getTabBrowserFromChild(this).mContextTab);"
			multipletab-insertafter="TreeStyleTabService.evaluateXPath(
				&quot;descendant::*[starts-with(@id, 'context_bookmarkTab')][1] | descendant::*[@command='Browser:BookmarkAllTabs']/preceding-sibling[1]&quot;
			, tabContextMenu, XPathResult.FIRST_ORDERED_NODE_TYPE).singleNodeValue"/>


		<!-- simply appended items -->

		<menuseparator id="context-separator-collapseExpandAll"/>
		<menuitem id="context-item-collapseAllSubtree"
			label="&context.collapseAllSubtree.label;"
			accesskey="&context.collapseAllSubtree.accesskey;"
			oncommand="TreeStyleTabService.getTabBrowserFromChild(this).treeStyleTab.collapseExpandAllSubtree(true);"/>
		<menuitem id="context-item-expandAllSubtree"
			label="&context.expandAllSubtree.label;"
			accesskey="&context.expandAllSubtree.accesskey;"
			oncommand="TreeStyleTabService.getTabBrowserFromChild(this).treeStyleTab.collapseExpandAllSubtree(false);"/>

		<menuseparator id="context-separator-toggleAutoHide"/>
		<menuitem id="context-item-toggleAutoHide"
			label="&context.toggleAutoHide.label;"
			accesskey="&context.toggleAutoHide.accesskey;"
			type="checkbox"
			autocheck="false"
			oncommand="TreeStyleTabService.toggleAutoHide();"/>
		<menuitem id="context-item-toggleFixed"
			label="&context.toggleFixed.label;"
			label-horizontal="&context.toggleFixed.label.horizontal;"
			label-vertical="&context.toggleFixed.label.vertical;"
			accesskey="&context.toggleFixed.accesskey;"
			type="checkbox"
			autocheck="false"
			oncommand="TreeStyleTabService.toggleFixed();"/>
		<menu id="context-menu-tabbarPosition"
			label="&context.tabbarPosition.label;"
			accesskey="&context.tabbarPosition.accesskey;">
			<menupopup oncommand="TreeStyleTabService.changeTabbarPosition(event.target.getAttribute('value'));">
				<menuitem label="&config.tabbar.position.left;"
					type="radio" value="left"/>
				<menuitem label="&config.tabbar.position.right;"
					type="radio" value="right"/>
				<menuseparator/>
				<menuitem label="&config.tabbar.position.top;"
					type="radio" value="top"/>
				<menuitem label="&config.tabbar.position.bottom;"
					type="radio" value="bottom"/>
			</menupopup>
		</menu>

	</menupopup>
</popupset>

</overlay>
